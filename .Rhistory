yhat.bag = predict(bag.boston ,newdata=Boston[-train ,])
mean((yhat.bag-boston.test)^2)
set.seed (1)
rf.boston=randomForest(medv~.,data=Boston,subset=train,mtry=6,importance =TRUE)
yhat.rf = predict(rf.boston ,newdata=Boston[-train ,])
mean((yhat.rf-boston.test)^2)
imporatnce(rf.boston)
importance(rf.boston)
varImpPlot(rf.boston)
library(gbm)
install.packages("gbm")
library(gbm)
set.seed(1)
boost.boston=gbm(medv~.,data=Boston[train,],distribution="gaussian",n.trees=5000,interaction.depth=4)
summary(boost.boston)
par(mfrow=c(1,2))
plot(boost.boston,i="rm");plot(boost.boston,i="lstat")
yhat.boost = predict(boost.boston, newdata = Boston[-train,], n.trees=5000)
mean((yhat.boost -boston.test)^2)
boost.boston=gbm(medv~.,data=Boston[train,],distribution= "gaussian ",n.trees=5000, interaction.depth=4,shrinkage =0.2, verbose =F)
boost.boston=gbm(medv~.,data=Boston[train,],distribution= "gaussian",n.trees=5000, interaction.depth=4,shrinkage =0.2, verbose =F)
yhat.boost=predict(boost.boston,newdata=Boston[-train,], n.trees=5000)
mean((yhat.boost -boston.test)^2)
library(MASS)
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston=tree(medv~.,Boston ,subset=train)
summary(tree.boston)
plot(tree.boston);text(tree.boston ,pretty=0)
cv.boston=cv.tree(tree.boston)
plot(cv.boston$size ,cv.boston$dev ,type='b')
prune.boston=prune.tree(tree.boston ,best=5)
plot(prune.boston);text(prune.boston ,pretty=0)
yhat=predict(tree.boston ,newdata=Boston[-train,])
boston.test=Boston[-train ,"medv"]
plot(yhat,boston.test);abline (0 ,1)
mean((yhat-boston.test)^2)
library(randomForest)
set.seed(1)
bag.boston=randomForest(medv~.,data=Boston,subset=train,mtry = 13, importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston ,newdata=Boston[-train ,])
plot(yhat.bag, boston.test);abline (0 ,1)
mean((yhat.bag-boston.test)^2)
knitr::opts_chunk$set(echo = TRUE)
library(tree)
library(ISLR)
attach(Carseats)
#hist(Sales)
High=ifelse(Sales<=8,"No","Yes")
Carseats=data.frame(Carseats, High)
tree.carseats=tree(High~.-Sales,data=Carseats)
summary(tree.carseats)
plot(tree.carseats);text(tree.carseats,pretty=0)
tree.carseats
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats [-train ,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
plot(tree.carseats);text(tree.carseats,pretty=0)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred ,High.test)
with(Carseats[-train,],table(tree.pred,High))
(86+57)/200
set.seed(3)
cv.carseats=cv.tree(tree.carseats,FUN=prune.misclass)
names(cv.carseats)
cv.carseats
par(mfrow=c(1,2))
plot(cv.carseats$size, cv.carseats$dev, type="b")
plot(cv.carseats$k, cv.carseats$dev, type="b")
prune.carseats=prune.misclass(tree.carseats,best=9)
plot(prune.carseats);text(prune.carseats,pretty=0)
tree.pred=predict(prune.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
(94+60)/200
prune.carseats=prune.misclass(tree.carseats,best=15)
plot(prune.carseats);text(prune.carseats,pretty=0)
tree.pred=predict(prune.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
(86+62)/200
library(tree)
library(ISLR)
attach(Carseats)
#hist(Sales)
High=ifelse(Sales<=8,"No","Yes")
Carseats=data.frame(Carseats, High)
tree.carseats=tree(High~.-Sales,data=Carseats)
summary(tree.carseats)
plot(tree.carseats);text(tree.carseats,pretty=0)
tree.carseats
set.seed(2)
train=sample(1:nrow(Carseats),200)
Carseats.test=Carseats [-train ,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
plot(tree.carseats);text(tree.carseats,pretty=0)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred ,High.test)
with(Carseats[-train,],table(tree.pred,High))
(86+57)/200
set.seed(3)
cv.carseats=cv.tree(tree.carseats,FUN=prune.misclass)
names(cv.carseats)
cv.carseats
par(mfrow=c(1,2))
plot(cv.carseats$size, cv.carseats$dev, type="b")
plot(cv.carseats$k, cv.carseats$dev, type="b")
prune.carseats=prune.misclass(tree.carseats,best=9)
plot(prune.carseats);text(prune.carseats,pretty=0)
tree.pred=predict(prune.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
(94+60)/200
prune.carseats=prune.misclass(tree.carseats,best=15)
plot(prune.carseats);text(prune.carseats,pretty=0)
tree.pred=predict(prune.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
(86+62)/200
library(MASS)
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston=tree(medv~.,Boston ,subset=train)
summary(tree.boston)
plot(tree.boston);text(tree.boston ,pretty=0)
cv.boston=cv.tree(tree.boston)
plot(cv.boston$size ,cv.boston$dev ,type='b')
prune.boston=prune.tree(tree.boston ,best=5)
plot(prune.boston);text(prune.boston ,pretty=0)
yhat=predict(tree.boston ,newdata=Boston[-train,])
boston.test=Boston[-train ,"medv"]
plot(yhat,boston.test);abline (0 ,1)
mean((yhat-boston.test)^2)
library(randomForest)
set.seed(1)
bag.boston=randomForest(medv~.,data=Boston,subset=train,mtry = 13, importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston ,newdata=Boston[-train ,])
plot(yhat.bag, boston.test);abline (0 ,1)
mean((yhat.bag-boston.test)^2)
bag.boston=randomForest(medv~.,data=Boston,subset=train, mtry=13,ntree=25)
yhat.bag = predict(bag.boston ,newdata=Boston[-train ,])
mean((yhat.bag-boston.test)^2)
set.seed (1)
rf.boston=randomForest(medv~.,data=Boston,subset=train,mtry=6,importance =TRUE)
yhat.rf = predict(rf.boston ,newdata=Boston[-train ,])
mean((yhat.rf-boston.test)^2)
importance(rf.boston)
varImpPlot(rf.boston)
library(gbm)
set.seed(1)
boost.boston=gbm(medv~.,data=Boston[train,],distribution="gaussian",n.trees=5000,interaction.depth=4)
summary(boost.boston)
par(mfrow=c(1,2))
plot(boost.boston,i="rm");plot(boost.boston,i="lstat")
yhat.boost = predict(boost.boston, newdata = Boston[-train,], n.trees=5000)
mean((yhat.boost -boston.test)^2)
boost.boston=gbm(medv~.,data=Boston[train,],distribution= "gaussian",n.trees=5000, interaction.depth=4,shrinkage =0.2, verbose =F)
yhat.boost=predict(boost.boston,newdata=Boston[-train,], n.trees=5000)
mean((yhat.boost -boston.test)^2)
install.pacakages("ISLR")
install.packages("ISLR")
install.packages("e1071")
install.packages("ROCR")
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
x=matrix(rnorm(20*2), ncol=2)
y=c(rep(-1,10), rep(1,10))
x[y==1,]=x[y==1,] + 1
plot(x, col=(3-y))
dat=data.frame(x=x, y=as.factor(y))
library(e1071)
svmfit=svm(y~., data=dat, kernel="linear", cost=10,scale=FALSE)
plot(svmfit, dat)
svmfit$index
summary(svmfit)
svmfit=svm(y~., data=dat, kernel="linear", cost=0.1,scale=FALSE)
plot(svmfit, dat)
svmfit$index
set.seed(1)
tune.out=tune(svm,y~.,data=dat,kernel="linear",ranges=list(cost=c(0.001, 0.01, 0.1, 1,5,10,100)))
summary(tune.out)
bestmod=tune.out$best.model
summary(bestmod)
xtest=matrix(rnorm(20*2), ncol=2)
ytest=sample(c(-1,1), 20, rep=TRUE)
xtest[ytest==1,]=xtest[ytest==1,] + 1
testdat=data.frame(x=xtest, y=as.factor(ytest))
ypred=predict(bestmod,testdat)
table(predict=ypred, truth=testdat$y)
svmfit=svm(y~., data=dat, kernel="linear", cost=.01,scale=FALSE)
ypred=predict(svmfit,testdat)
table(predict=ypred, truth=testdat$y)
x[y==1,]=x[y==1,]+0.5
plot(x, col=(y+5)/2, pch=19)
dat=data.frame(x=x,y=as.factor(y))
svmfit=svm(y~., data=dat, kernel="linear", cost=1e5)
summary(svmfit)
plot(svmfit, dat)
svmfit=svm(y~., data=dat, kernel="linear", cost=1)
summary(svmfit)
plot(svmfit,dat)
set.seed(1)
x=matrix(rnorm(200*2), ncol=2)
x[1:100,]=x[1:100,]+2
x[101:150,]=x[101:150,]-2
y=c(rep(1,150),rep(2,50))
dat=data.frame(x=x,y=as.factor(y))
plot(x, col=y)
train=sample(200,100)
svmfit=svm(y~., data=dat[train,], kernel="radial",  gamma=1, cost=1)
plot(svmfit, dat[train,])
summary(svmfit)
svmfit=svm(y~., data=dat[train,], kernel="radial",gamma=1,cost=1e5)
plot(svmfit,dat[train,])
set.seed(1)
tune.out=tune(svm, y~., data=dat[train,], kernel="radial", ranges=list(cost=c(0.1,1,10,100,1000),gamma=c(0.5,1,2,3,4)))
summary(tune.out)
table(true=dat[-train,"y"], pred=predict(tune.out$best.model,newdata=dat[-train,]))
library(ROCR)
rocplot=function(pred, truth, ...){
predob = prediction(pred, truth)
perf = performance(predob, "tpr", "fpr")
plot(perf,...)}
svmfit.opt=svm(y~., data=dat[train,], kernel="radial",gamma=2, cost=1,decision.values=T)
fitted=attributes(predict(svmfit.opt,dat[train,],decision.values=TRUE))$decision.values
par(mfrow=c(1,2))
rocplot(fitted,dat[train,"y"],main="Training Data")
svmfit.flex=svm(y~., data=dat[train,], kernel="radial",gamma=50, cost=1, decision.values=T)
fitted=attributes(predict(svmfit.flex,dat[train,],decision.values=T))$decision.values
rocplot(fitted,dat[train,"y"],add=T,col="red")
fitted=attributes(predict(svmfit.opt,dat[-train,],decision.values=T))$decision.values
rocplot(fitted,dat[-train,"y"],main="Test Data")
fitted=attributes(predict(svmfit.flex,dat[-train,],decision.values=T))$decision.values
rocplot(fitted,dat[-train,"y"],add=T,col="red")
set.seed(1)
x=rbind(x, matrix(rnorm(50*2), ncol=2))
y=c(y, rep(0,50))
x[y==0,2]=x[y==0,2]+2
dat=data.frame(x=x, y=as.factor(y))
par(mfrow=c(1,1))
plot(x,col=(y+1))
svmfit=svm(y~., data=dat, kernel="radial", cost=10, gamma=1)
plot(svmfit, dat)
library(ISLR)
names(Khan)
dim(Khan$xtrain)
dim(Khan$xtest)
length(Khan$ytrain)
length(Khan$ytest)
table(Khan$ytrain)
table(Khan$ytest)
dat=data.frame(x=Khan$xtrain, y=as.factor(Khan$ytrain))
out=svm(y~., data=dat, kernel="linear",cost=10)
summary(out)
table(out$fitted, dat$y)
dat.te=data.frame(x=Khan$xtest, y=as.factor(Khan$ytest))
pred.te=predict(out, newdata=dat.te)
table(pred.te, dat.te$y)
a1 = 0.6^5*0.4^5
b1 = 0.5^5*0.5^5
A1 = a1/(a1+b1)
B1 = b1/(a1+b1)
A1
B1
10*0.45*0.5
10*0.55*0.5
10*0.55*0.5
a2 = 0.6^9*0.4^1
b2 = 0.5^9*0.5^1
A2 = a2/(a2+b2)
B2 = b2/(a2+b2)
A2
B2
10*0.8*0.9
10*0.8*0.1
10*0.2*0.9
10*0.2*0.1
0.256/0.16
125+96
96/(125+96)
125/(125+96)
3.81/(3.81+2.25)
library(dplyr)
library(ggplot2)
getwd(
)
setwd("./Documents/GitHub/amazon_skills_scraper")
read.csv(file='datasets/reviews_liwc.csv',header = TRUE, sep = ',')
reviews_liwc = read.csv(file='datasets/reviews_liwc.csv',header = TRUE, sep = ',')
reviews_liwc %>% head
setwd("./Documents/GitHub/amazon_skills_scraper")
reviews_liwc = read.csv(file='datasets/reviews_liwc.csv',header = TRUE, sep = ',')
reviews_liwc %>% head
reviews_liwc %>% colnames()
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = social)) + geom_boxplot()
summary(reviews_liwc)
attach(reviews_liwc)
colnames()
colnames(reviews_liwc)
table(Source..C.)
head(rev)
head(reviews_liwc)
table(Source..A.)
sort(x = table(Source..A.))
sort(x = table(Source..A.),decreasing = TRUE)
sort(x = table(Source..A.),decreasing = FALSE)
sort(x = Source..A.)
summary(Source..A.)
summary(reviews_liwc)
summary(shehe)
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = shehe)) + geom_boxplot()
summary(shehe)
filter(Source..G. == 'The Magic Door') %>% summary(shehe)
filter(data = reviews_liwc,Source..G. == 'The Magic Door') %>% summary(shehe)
filter(data = reviews_liwc, Source..G. == The Magic Door) %>% summary(shehe)
filter(reviews_liwc, Source..G. == 'The Magic Door') %>% summary(shehe)
filter(.data = reviews_liwc, Source..G. == 'The Magic Door') %>% summary(shehe)
filter(.data = reviews_liwc, Source..G. == 'The Magic Door')
temp = filter(.data = reviews_liwc, Source..G. == 'The Magic Door')
temp$shehe
temp$shehe %>% summary
group_by(.data = reviews_liwc, Source..G.) %>% head
group_by(.data = reviews_liwc, Source..G.)
group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean)
group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean(social))
table(Source..G.)
group_by(.data = reviews_liwc, Source..G.) %>% summarise(social = mean(social))
group_by(.data = reviews_liwc, Source..G.) %>% summarise(social = mean(social)) #mean, each skill
group_by(.data = reviews_liwc, Source..G.) %>% summarise(social = mean(social_mean)) %>% ggplot(aes(x=Source..G., y= social_mean)) + geom_bar() #mean, each skill
social_mean = group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean = mean(social))
social_mean
ggplot(social_mean, aes(x=Source..G., y= mean)) + geom_bar() #mean, each skill
social_mean = group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean = mean(social))
ggplot(social_mean, aes(x=Source..G., y = mean)) + geom_bar() #mean, each skill
social_mean
class(social_mean)
data.frame(social_mean)
social_mean = group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean = mean(social)) %>% data.frame
ggplot(social_mean, aes(x=Source..G., y = mean)) + geom_bar() #mean, each skill
social_mean
ggplot(social_mean, aes(x=Source..G., y = mean)) + geom_bar(stat = "identity") #mean, each skill
?geom_bar
shehe_mean = group_by(.data = reviews_liwc, Source..G.) %>% summarise(mean = mean(shehe)) %>% data.frame
ggplot(shehe_mean, aes(x=Source..G., y = mean)) + geom_bar(stat = "identity") #mean, each skill
shehe_mean
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = shehe)) + geom_boxplot()
?geom_bar
ggplot(shehe_mean, aes(x=Source..G., y = mean)) + geom_bar(stat = "identity")
ggplot(reviews_liwc, aes(x=Source..G., y = mean)) + geom_bar(stat = "identity")
ggplot(reviews_liwc, aes(x=Source..G., y = shehe)) + geom_bar(stat = "identity")
ggplot(shehe_mean, aes(x=Source..G., y = mean)) + geom_bar(stat = "identity") #mean, each skill
ggplot(reviews_liwc, aes(x=Source..G., y = shehe)) + geom_bar(stat = "identity")
detach(reviews_liwc)
group_by(.data = reviews_liwc, Source..G.)
ggplot(reviews_liwc, aes(x=Source..G., y = shehe)) + geom_bar(stat = "identity")
shehe_mean
social_mean
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = they)) + geom_boxplot()
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = posemo)) + geom_boxplot()
library(dplyr)
library(ggplot2)
setwd("./Documents/GitHub/amazon_skills_scraper")
skills = read.csv(file='datasets/skills_processed.csv',header = TRUE, sep = ',')
reviews = read.csv(file='datasets/reviews_processed.csv',header = TRUE, sep = ',')
skills = read.csv(file='datasets/comments_processed.csv',header = TRUE, sep = ',')
comments = read.csv(file='datasets/comments_processed.csv',header = TRUE, sep = ',')
skills %>% head
View(skills)
reviews_liwc = read.csv(file='datasets/reviews_liwc.csv',header = TRUE, sep = ',', stringsAsFactors = FALSE)
reviews = read.csv(file='datasets/reviews_processed.csv',header = TRUE, sep = ',' ,stringsAsFactors = FALSE)
comments = read.csv(file='datasets/comments_processed.csv',header = TRUE, sep = ',' ,stringsAsFactors = FALSE)
skills %>% head
summary(skills)
skills %>% head
str(skills)
skills = read.csv(file='datasets/skills_processed.csv',header = TRUE, sep = ',' ,stringsAsFactors = FALSE,encoding = "utf-8")
skills %>% head
str(skills)
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar()
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar(stat = "identity")
skills %>% ggplot(aes(x=author, y = rating)) + geom_box(stat = "identity")
skills %>% ggplot(aes(x=author, y = rating)) + geom_boxplot()
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar(stat = "identity")
arrange(skills, raring)
arrange(skills, rating)
select(arrange(skills, rating))
arrange(skills, rating) %>% select(title, rating)
arrange(skills, rating, desc = TRUE) %>% select(title, rating)
arrange(skills, rating, desc()) %>% select(title, rating)
arrange(skills, rating, desc %>% select(title, rating)
#plotting
#boxplot
skills %>% ggplot(aes(x=author, y = rating)) + geom_boxplot()
#barplot
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar(stat = "identity")
arrange(skills, rating, desc) %>% select(title, rating)
arrange(skills, rating, desc) %>% desc %>%  select(title, rating)
arrange(skills, desc(rating))%>%  select(title, rating)
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar(stat = "identity")
?ggplot
?geom_boxplot
?geom_bar
skills %>% ggplot(aes(x=reorder(author), y = rating)) + geom_bar(stat = "identity")
skills %>% ggplot(aes(x=reorder(-author), y = rating)) + geom_bar(stat = "identity")
skills %>% ggplot(aes(x=author, y = -rating)) + geom_bar(stat = "identity")
skills %>% ggplot(aes(x=author, y = rating)) + geom_bar(stat = "identity")
reorder(author, rating)
reorder(skills$author, skills$rating)
skills %>% ggplot(aes(x = reorder(author, rating), y = rating)) + geom_bar(stat = "identity")
skills %>% ggplot(aes(x = reorder(author, -rating), y = rating)) + geom_bar(stat = "identity")
summary(skills)
skills$title
skills %>% ggplot(aes(x=title, y = rating)) + geom_boxplot()
skills %>% ggplot(aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity")
skills %>% head
str(skills)
skills$ratingPercentage_1 %>% table
skills %>% ggplot(aes(x = reorder(title, -reviewNum), y = reviewNum)) + geom_bar(stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity") +
ggplot(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum)) + geom_bar(stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity") +
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity") +
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point() +
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point()
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point(color = "blue") +
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point(color = "blue")
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point(color = "blue")
geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot()+geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point(color = "blue")+geom_bar(data = skills, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_point(color = "blue")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(color = "blue", stat = "identity")
?geom_bar
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(colour = "blue", stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(fill = "blue", stat = "identity")
colour
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(color = "blue", stat = "identity")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(color = "blue", stat = "identity", fill = "red")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(color = "blue", stat = "identity", fill = "green")
ggplot(data = skills, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "green", color = "blue")
?scale
select(skills, title, reviewNum)
temp = select(skills, title, reviewNum)
scale(temp$reviewNum)
temp$reviewNum = scale(temp$reviewNum)
temp
scale(temp$rating)
temp2 = select(skills, title, rating)
scale(temp2$rating)
temp2$rating = scale(temp2$rating)
temp2
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "green", color = "blue")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "black", color = "blue")
ggplot(data = temp, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "black", color = "blue")
ggplot(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum)) + geom_bar(stat = "identity", fill = "black", color = "blue")
+ geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum)) + geom_point(stat = "identity", fill = "black", color = "blue")
+ geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "black", color = "blue")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "black", color = "blue")+
+ geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "black", color = "blue")+
geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, color = red))
temp = select(skills, title, reviewNum)
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, color = "red"))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, color = "red"))
temp$reviewNum = scale(temp$reviewNum)
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_point(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, color = "red"))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, color = "red"))
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum))
?geom_line
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum), stat = "identity")
temp
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum,group = 1), stat = "identity")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue")+
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity", color = "red")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue") +
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity", color = "red") + # rating & reviewNum
labs(title = "Rating = bar, reviewNum = point", x= "title", y = "rating")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue") +
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity", color = "red") + # rating & reviewNum
ggtitle("Rating")
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue") +
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity", color = "red") + # rating & reviewNum
labs(title = "Rating = bar, reviewNum = point", x= "title", y = "rating")
?labs
ggplot(data = temp2, aes(x = reorder(title, -rating), y = rating)) + geom_bar(stat = "identity", fill = "blue", color = "blue") +
geom_line(data = temp, aes(x = reorder(title, -reviewNum), y = reviewNum, group = 1), stat = "identity", color = "red") + # rating & reviewNum
labs(title = "Rating = bar, reviewNum = point", x= "title", y = "rating") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = negemo)) + geom_boxplot()
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = percept)) + geom_boxplot()
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = afiiliation)) + geom_boxplot()
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = affiliation)) + geom_boxplot()
skills$title
ggplot(data = reviews_liwc, aes(x = Source..G. ,y = affiliation)) + geom_boxplot()
